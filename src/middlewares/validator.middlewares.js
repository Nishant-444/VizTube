import { validationResult } from "express-validator";
import ApiError from "../utils/ApiError.js";

/**
 * Middleware to handle validation errors generated by express-validator.
 * This should be placed in a route chain immediately after the validation rules.
 *
 * @param {Object} req - The Express request object.
 * @param {Object} res - The Express response object.
 * @param {Function} next - The Express next middleware function.
 */
export const validatorError = (req, res, next) => {
	// 1. Get the validation errors from the request.
	const errors = validationResult(req);

	// 2. If there are no errors, pass control to the next middleware.
	if (errors.isEmpty()) {
		return next();
	}

	// 3. If there are errors, format them and throw a standardized ApiError.
	const extractedErrors = [];
	errors.array().map((err) => extractedErrors.push({ [err.path]: err.msg }));

	// Throw a 422 Unprocessable Entity error with the detailed validation messages.
	throw new ApiError(422, "Validation failed", extractedErrors);
};
